// Generated by CoffeeScript 1.6.3
var Plop, PlopParticle,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

PlopParticle = (function() {
  function PlopParticle(textures, x, y) {
    this.textures = textures;
    this.movie = null;
    this.animated = Math.random() < params.animatedRatio;
    this.angle = Math.random() * Math.PI * 2;
    this.dist = Math.random() * params.radius;
    this.speed = Math.random() * 0.15 + 0.02;
    this.offset = {
      x: Math.cos(this.angle) * this.dist,
      y: Math.sin(this.angle) * this.dist
    };
    this.setupMovie(x, y);
  }

  PlopParticle.prototype.setupMovie = function(x, y) {
    if (this.animated) {
      this.movie = new PIXI.MovieClip(this.textures);
    } else {
      this.movie = new PIXI.Sprite(this.textures[10]);
    }
    this.movie.position.x = x + this.offset.x;
    this.movie.position.y = y + this.offset.y;
    this.movie.anchor.x = 0.5;
    this.movie.anchor.y = 0.5;
    this.movie.rotation = Math.random() * Math.PI;
    this.movie.animationSpeed = 0.5 + Math.random() * 0.8;
    return this.movie.tint = params.colors[Math.floor(Math.random() * params.colors.length)];
  };

  PlopParticle.prototype.move = function(x, y) {
    this.angle += this.speed * 0.2;
    this.offset = {
      x: Math.cos(this.angle) * this.dist,
      y: Math.sin(this.angle) * this.dist
    };
    this.movie.position.x += (x + this.offset.x - this.movie.position.x) * this.speed;
    return this.movie.position.y += (y + this.offset.y - this.movie.position.y) * this.speed;
  };

  return PlopParticle;

})();

Plop = (function(_super) {
  __extends(Plop, _super);

  function Plop() {
    var i, id, plop, r, texture, _i, _j, _ref;
    Plop.__super__.constructor.call(this);
    this.plopsArr = null;
    this.plopTextures = [];
    for (i = _i = 0; _i <= 39; i = ++_i) {
      id = '000' + i;
      id = id.substr(id.length - 4);
      texture = PIXI.Texture.fromFrame('plop/' + id);
      this.plopTextures.push(texture);
    }
    r = window.devicePixelRatio;
    this.plopsArr = [];
    for (i = _j = 0, _ref = params.numParticles; 0 <= _ref ? _j < _ref : _j > _ref; i = 0 <= _ref ? ++_j : --_j) {
      plop = new PlopParticle(this.plopTextures, 0, 0);
      if (plop.animated) {
        plop.movie.gotoAndPlay(i % 26);
      }
      this.addChild(plop.movie);
      this.plopsArr.push(plop);
    }
  }

  Plop.prototype.update = function(x, y) {
    var plop, _i, _len, _ref, _results;
    _ref = this.plopsArr;
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      plop = _ref[_i];
      _results.push(plop.move(x, y));
    }
    return _results;
  };

  return Plop;

})(PIXI.DisplayObjectContainer);
